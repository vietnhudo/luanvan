{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst khachhang = createSlice({\n  name: \"khachhang\",\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    },\n    dathang: {\n      isFetching: false,\n      error: false,\n      success: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    },\n    logOutSuccess: state => {\n      state.login.isFetching = false;\n      state.login.currentUser = null;\n      state.login.error = false;\n    },\n    logOutFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    logOutStart: state => {\n      state.login.isFetching = true;\n    },\n    LienheStart: state => {// state.dathang.isFetching = true;\n    },\n    LienheSuccess: state => {\n      state.dathang.isFetching = false;\n      state.dathang.error = false;\n      state.dathang.success = true;\n    },\n    LienheFailed: state => {\n      state.dathang.isFetching = false;\n      state.dathang.error = true;\n      state.dathang.success = false;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess,\n  registerStart,\n  registerSuccess,\n  registerFailed,\n  logOutStart,\n  logOutSuccess,\n  logOutFailed,\n  LienheStart,\n  LienheSuccess,\n  LienheFailed\n} = khachhang.actions;\nexport default khachhang.reducer;","map":{"version":3,"names":["createSlice","khachhang","name","initialState","login","currentUser","isFetching","error","register","success","dathang","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logOutSuccess","logOutFailed","logOutStart","LienheStart","LienheSuccess","LienheFailed","actions","reducer"],"sources":["D:/luanvanmoinhat/luanvan/fontend/src/redux/khachhang.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst khachhang = createSlice({\r\n    name: \"khachhang\",\r\n    initialState:{\r\n        login:{\r\n            currentUser:null,\r\n            isFetching: false,\r\n            error:false\r\n        },\r\n        register:{\r\n            isFetching: false,\r\n            error:false,\r\n            success:false\r\n        },\r\n        dathang:{\r\n            isFetching: false,\r\n            error:false,\r\n            success:false\r\n        },\r\n    },\r\n    reducers:{\r\n        loginStart: (state) =>{\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state,action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state) =>{\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        registerStart: (state) =>{\r\n            state.register.isFetching = true;\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state) =>{\r\n            state.register.isFetching = false;\r\n            state.register.error = true;\r\n            state.register.success = false;\r\n        },\r\n        logOutSuccess: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = null;\r\n            state.login.error = false;\r\n        },\r\n        logOutFailed: (state) =>{\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        logOutStart: (state) =>{\r\n            state.login.isFetching = true;\r\n        },\r\n        LienheStart: (state) =>{\r\n            // state.dathang.isFetching = true;\r\n        },\r\n        LienheSuccess: (state) => {\r\n            state.dathang.isFetching = false;\r\n            state.dathang.error = false;\r\n            state.dathang.success = true;\r\n        },\r\n        LienheFailed: (state) =>{\r\n            state.dathang.isFetching = false;\r\n            state.dathang.error = true;\r\n            state.dathang.success = false;\r\n        },\r\n       \r\n    }\r\n});\r\n\r\n\r\n\r\nexport const {\r\n    loginStart,\r\n    loginFailed,\r\n    loginSuccess,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed,\r\n    logOutStart,\r\n    logOutSuccess,\r\n    logOutFailed,\r\n    LienheStart,\r\n    LienheSuccess,\r\n    LienheFailed,\r\n} = khachhang.actions;\r\n\r\nexport default khachhang.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}